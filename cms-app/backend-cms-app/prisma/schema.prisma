// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Role {
  id    Int    @id @default(autoincrement())
  name  String @unique
  users User[]
}

model User {
  id       Int      @id @default(autoincrement())
  name     String
  email    String   @unique
  password String
  roleId   Int
  role     Role     @relation(fields: [roleId], references: [id])
  posts    Post[]
  comments Comment[]
}

model Category {
  id    Int    @id @default(autoincrement())
  name  String
  slug  String @unique
  posts Post[]
}

model Post {
  id         Int       @id @default(autoincrement())
  title      String
  slug       String    @unique
  content    String
  thumbnail  String?
  status     String    @default("draft")
  authorId   Int
  author     User      @relation(fields: [authorId], references: [id])
  categoryId Int
  category   Category  @relation(fields: [categoryId], references: [id])
  comments   Comment[]
  createdAt  DateTime  @default(now())
  updatedAt  DateTime  @updatedAt
}

model Comment {
  id        Int       @id @default(autoincrement())
  content   String
  userId    Int
  postId    Int
  parentId  Int?
  user      User      @relation(fields: [userId], references: [id])
  post      Post      @relation(fields: [postId], references: [id])
  parent    Comment?  @relation("CommentReplies", fields: [parentId], references: [id])
  replies   Comment[] @relation("CommentReplies")
  createdAt DateTime  @default(now())
}